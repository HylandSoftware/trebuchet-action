name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - run: |
          npm run all
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DESTINATION_AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.DESTINATION_AWS_SECRET_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.DESTINATION_ROLE }}
          role-skip-session-tagging: true
          mask-aws-account-id: false
          role-duration-seconds: 900

      - uses: ./
        with:
          action: copy
          source-account-id: ${{ secrets.SOURCE_ACCOUNT_ID }}
          source-role-arn: ${{ secrets.SOURCE_ROLE }}
          repository: ${{ secrets.REPOSITORY }}
          tag: ${{ secrets.TAG }}

  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic-release
      with:
        extra_plugins: |
          @semantic-release/exec
          @semantic-release/changelog
          @semantic-release/git
        branches: |
          [
            "+([0-9])?(.{+([0-9]),x}).x",
            "main",
            "next",
            "next-major",
            {
              "name": "beta",
              "prerelease": true
            },
            {
              "name": "alpha",
              "prerelease": true
            }
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Move major version tag
      if: steps.semantic-release.outputs.new_release_published == 'true'
      env:
        VERION_TAG: v${{steps.semantic-release.outputs.new_release_major_version}}
      run: |
        git tag -d ${{ env.VERION_TAG }}
        git push origin :${{ env.VERION_TAG }}
        git tag ${{ env.VERION_TAG }}
        git push origin ${{ env.VERION_TAG }}